name: CI/CD

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build development image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.dev
          load: true
          tags: bbctrl-dev:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: |
          docker run --rm bbctrl-dev:test pytest src/py/bbctrl/test

      - name: Run linting
        run: |
          docker run --rm bbctrl-dev:test bash -c "\
            flake8 src/py/bbctrl && \
            black --check src/py/bbctrl && \
            mypy src/py/bbctrl && \
            ./node_modules/.bin/jshint --config jshint.json src/js/*.js"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build production image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          load: true
          tags: bbctrl:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build firmware package
        run: |
          docker run --rm -v $PWD/dist:/build/dist bbctrl:latest make pkg

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firmware-package
          path: dist/*.tar.bz2

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: firmware-package
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/bbctrl-*.tar.bz2
          asset_name: bbctrl-firmware.tar.bz2
          asset_content_type: application/x-bzip2